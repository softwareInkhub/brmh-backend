openapi: 3.0.0
info:
  title: AWS Messaging Service API
  version: 1.0.0
  description: API for AWS SNS (Simple Notification Service) and SQS (Simple Queue Service) operations

paths:
  /sns/topics:
    get:
      summary: List SNS Topics
      operationId: listSnsTopics
      responses:
        '200':
          description: List of SNS topics
          content:
            application/json:
              schema:
                type: object
                properties:
                  topics:
                    type: array
                    items:
                      $ref: '#/components/schemas/SnsTopic'
    post:
      summary: Create SNS Topic
      operationId: createSnsTopic
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Name of the SNS topic
                tags:
                  type: object
                  additionalProperties:
                    type: string
      responses:
        '201':
          description: Topic created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnsTopic'

  /sns/topics/{topicArn}:
    delete:
      summary: Delete SNS Topic
      operationId: deleteSnsTopic
      parameters:
        - name: topicArn
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Topic deleted successfully

  /sns/publish:
    post:
      summary: Publish message to SNS Topic
      operationId: publishToSnsTopic
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - topicArn
                - message
              properties:
                topicArn:
                  type: string
                message:
                  type: string
                subject:
                  type: string
                messageAttributes:
                  type: object
                  additionalProperties:
                    type: object
      responses:
        '200':
          description: Message published successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageId:
                    type: string

  /sqs/queues:
    get:
      summary: List SQS Queues
      operationId: listSqsQueues
      responses:
        '200':
          description: List of SQS queues
          content:
            application/json:
              schema:
                type: object
                properties:
                  queues:
                    type: array
                    items:
                      $ref: '#/components/schemas/SqsQueue'
    post:
      summary: Create SQS Queue
      operationId: createSqsQueue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Name of the SQS queue
                attributes:
                  type: object
                  properties:
                    DelaySeconds:
                      type: string
                    MaximumMessageSize:
                      type: string
                    MessageRetentionPeriod:
                      type: string
                    VisibilityTimeout:
                      type: string
                tags:
                  type: object
                  additionalProperties:
                    type: string
      responses:
        '201':
          description: Queue created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqsQueue'

  /sqs/queues/{queueUrl}:
    delete:
      summary: Delete SQS Queue
      operationId: deleteSqsQueue
      parameters:
        - name: queueUrl
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Queue deleted successfully

  /sqs/messages:
    post:
      summary: Send message to SQS Queue
      operationId: sendMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - queueUrl
                - message
              properties:
                queueUrl:
                  type: string
                message:
                  type: string
                delaySeconds:
                  type: integer
                  minimum: 0
                  maximum: 900
                messageAttributes:
                  type: object
                  additionalProperties:
                    type: object
      responses:
        '200':
          description: Message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageId:
                    type: string

  /sqs/messages/{queueUrl}:
    get:
      summary: Receive messages from SQS Queue
      operationId: receiveMessages
      parameters:
        - name: queueUrl
          in: path
          required: true
          schema:
            type: string
        - name: maxMessages
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 10
            default: 1
        - name: waitTimeSeconds
          in: query
          schema:
            type: integer
            minimum: 0
            maximum: 20
            default: 0
      responses:
        '200':
          description: Messages received successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/SqsMessage'

    delete:
      summary: Delete message from SQS Queue
      operationId: deleteMessage
      parameters:
        - name: queueUrl
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - receiptHandle
              properties:
                receiptHandle:
                  type: string
      responses:
        '204':
          description: Message deleted successfully

components:
  schemas:
    SnsTopic:
      type: object
      properties:
        topicArn:
          type: string
        name:
          type: string
        tags:
          type: object
          additionalProperties:
            type: string

    SqsQueue:
      type: object
      properties:
        queueUrl:
          type: string
        name:
          type: string
        attributes:
          type: object
          properties:
            DelaySeconds:
              type: string
            MaximumMessageSize:
              type: string
            MessageRetentionPeriod:
              type: string
            VisibilityTimeout:
              type: string
        tags:
          type: object
          additionalProperties:
            type: string

    SqsMessage:
      type: object
      properties:
        messageId:
          type: string
        receiptHandle:
          type: string
        body:
          type: string
        attributes:
          type: object
        messageAttributes:
          type: object
        md5OfBody:
          type: string 